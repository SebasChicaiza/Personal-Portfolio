/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.ecuacionesgrado1y2;
import javax.swing.*;
import java.awt.*;

/**
 *
 * @author sebas
 */
public class ImpEcu extends javax.swing.JFrame {

    /**
     * Creates new form ImpEcu
     *
     */
    private int A;
    private int B;
    private int C;
    public ImpEcu() {        
        initComponents();
    }
    public ImpEcu(String TituloFrame, int a, int b, int c) {
        super(TituloFrame);  
        initComponents();
        this.A = a;
        this.B = b;
        this.C = c;           
    }   
    public int getCoefA(){
        return this.A;
    }
    public int getCoefB(){
        return this.B;
    }
    public int getCoefC(){
        return this.C;
    }
    @Override
    public void paint(Graphics g) {       
        
        super.paint(g);        
        // Definir el rango de valores en el eje X
        int minX = -10;
        int maxX = 10;        

        // Calcular el tamaño del área de dibujo
        int ancho = getWidth();
        int alto = getHeight();
        //Obtener los coeficientes
        int a = getCoefA();
        int b = getCoefB();
        int c = getCoefC();

        // Calcular el tamaño de cada unidad en los ejes X
        double escalaX = (double) ancho / (maxX - minX);        

        // Dibujar ejes X e Y
        g.drawLine(0, alto / 2, ancho, alto / 2); // Eje X
        g.drawLine(ancho / 2, 0, ancho / 2, alto); // Eje Y        
        if(a == 0){
            // Calcular y dibujar los puntos de la función lineal
            g.setColor(Color.RED);
            for (int x = minX; x <= maxX; x++) {
                double y = b * x + c;
                int X = (int) (ancho / 2 + escalaX * x);
                int Y = (int) (alto / 2 - y); // Invertir la coordenada Y
                g.fillOval(X,Y, 3, 3); // Dibujar punto
            }
        }
        else{
            // Calcular y dibujar los puntos de la función cuadrática
            g.setColor(Color.BLUE);
            for (double x = minX; x <= maxX; x += 0.1) {
                double y = a * x * x + b * x + c;
                int X = (int) (ancho / 2 + escalaX * x);
                int Y = (int) (alto / 2 - y); // Invertir la coordenada Y
                g.fillOval(X, Y, 3, 3); // Dibujar punto
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ImpEcu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ImpEcu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ImpEcu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ImpEcu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ImpEcu().setVisible(true);
            }
        });     
        
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
